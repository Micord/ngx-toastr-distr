{"version":3,"file":"ngx-toastr.umd.js.map","sources":["ng://ngx-toastr/toastr/toast.directive.ts","node_modules/tslib/tslib.es6.js","ng://ngx-toastr/toastr/toastr-config.ts","ng://ngx-toastr/portal/portal.ts","ng://ngx-toastr/portal/dom-portal-host.ts","ng://ngx-toastr/overlay/overlay-ref.ts","ng://ngx-toastr/overlay/overlay-container.ts","ng://ngx-toastr/overlay/overlay.ts","ng://ngx-toastr/toastr/toast-injector.ts","ng://ngx-toastr/toastr/toast-token.ts","ng://ngx-toastr/toastr/toastr.service.ts","ng://ngx-toastr/toastr/toast.component.ts","ng://ngx-toastr/toastr/default-config.ts","ng://ngx-toastr/toastr/toastr.module.ts","ng://ngx-toastr/toastr/toast-noanimation.component.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  NgModule,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[toastContainer]',\r\n  exportAs: 'toastContainer',\r\n})\r\nexport class ToastContainerDirective {\r\n  constructor(private el: ElementRef) { }\r\n  getContainerElement(): HTMLElement {\r\n    return this.el.nativeElement;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ToastContainerDirective],\r\n  exports: [ToastContainerDirective],\r\n})\r\nexport class ToastContainerModule {}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { SafeHtml } from '@angular/platform-browser';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ComponentType } from '../portal/portal';\r\nimport { ToastRef } from './toast-injector';\r\n\r\n/**\r\n * Configuration for an individual toast.\r\n */\r\nexport interface IndividualConfig {\r\n  /**\r\n   * disable both timeOut and extendedTimeOut\r\n   * default: false\r\n   */\r\n  disableTimeOut: boolean;\r\n  /**\r\n   * toast time to live in milliseconds\r\n   * default: 5000\r\n   */\r\n  timeOut: number;\r\n  /**\r\n   * toast show close button\r\n   * default: false\r\n   */\r\n  closeButton: boolean;\r\n  /**\r\n   * time to close after a user hovers over toast\r\n   * default: 1000\r\n   */\r\n  extendedTimeOut: number;\r\n  /**\r\n   * show toast progress bar\r\n   * default: false\r\n   */\r\n  progressBar: boolean;\r\n\r\n  /**\r\n   * changes toast progress bar animation\r\n   * default: decreasing\r\n   */\r\n  progressAnimation?: 'increasing' | 'decreasing';\r\n  /**\r\n   * render html in toast message (possibly unsafe)\r\n   * default: false\r\n   */\r\n  enableHtml: boolean;\r\n  /**\r\n   * css class on toast component\r\n   * default: toast\r\n   */\r\n  toastClass: string;\r\n  /**\r\n   * css class on toast container\r\n   * default: toast-top-right\r\n   */\r\n  positionClass: string;\r\n  /**\r\n   * css class on toast title\r\n   * default: toast-title\r\n   */\r\n  titleClass: string;\r\n  /**\r\n   * css class on toast message\r\n   * default: toast-message\r\n   */\r\n  messageClass: string;\r\n  /**\r\n   * animation easing on toast\r\n   * default: ease-in\r\n   */\r\n  easing: string;\r\n  /**\r\n   * animation ease time on toast\r\n   * default: 300\r\n   */\r\n  easeTime: string | number;\r\n  /**\r\n   * clicking on toast dismisses it\r\n   * default: true\r\n   */\r\n  tapToDismiss: boolean;\r\n  /**\r\n   * Angular toast component to be shown\r\n   * default: Toast\r\n   */\r\n  toastComponent: ComponentType<any>;\r\n  /**\r\n   * Helps show toast from a websocket or from event outside Angular\r\n   * default: false\r\n   */\r\n  onActivateTick: boolean;\r\n}\r\n\r\nexport interface ToastrIconClasses {\r\n  error: string;\r\n  info: string;\r\n  success: string;\r\n  warning: string;\r\n}\r\n\r\n/**\r\n * Global Toast configuration\r\n * Includes all IndividualConfig\r\n */\r\nexport interface GlobalConfig extends IndividualConfig {\r\n  /**\r\n   * max toasts opened. Toasts will be queued\r\n   * Zero is unlimited\r\n   * default: 0\r\n   */\r\n  maxOpened: number;\r\n  /**\r\n   * dismiss current toast when max is reached\r\n   * default: false\r\n   */\r\n  autoDismiss: boolean;\r\n  iconClasses: Partial<ToastrIconClasses>;\r\n  /**\r\n   * New toast placement\r\n   * default: true\r\n   */\r\n  newestOnTop: boolean;\r\n  /**\r\n   * block duplicate messages\r\n   * default: false\r\n   */\r\n  preventDuplicates: boolean;\r\n\r\n  /**\r\n   * Reset toast timeout when there's a duplicate (preventDuplicates needs to be set to true)\r\n   * default: false\r\n   */\r\n  resetTimeoutOnDuplicate: boolean;\r\n}\r\n\r\n/**\r\n * Everything a toast needs to launch\r\n */\r\nexport class ToastPackage {\r\n  private _onTap = new Subject<any>();\r\n  private _onAction = new Subject<any>();\r\n\r\n  constructor(\r\n    public toastId: number,\r\n    public config: IndividualConfig,\r\n    public message: string | SafeHtml | null | undefined,\r\n    public title: string | undefined,\r\n    public toastType: string,\r\n    public toastRef: ToastRef<any>\r\n  ) {\r\n    this.toastRef.afterClosed().subscribe(() => {\r\n      this._onAction.complete();\r\n      this._onTap.complete();\r\n    });\r\n  }\r\n\r\n  /** Fired on click */\r\n  triggerTap() {\r\n    this._onTap.next();\r\n    if (this.config.tapToDismiss) {\r\n      this._onTap.complete();\r\n    }\r\n  }\r\n\r\n  onTap(): Observable<any> {\r\n    return this._onTap.asObservable();\r\n  }\r\n\r\n  /** available for use in custom toast */\r\n  triggerAction(action?: any) {\r\n    this._onAction.next(action);\r\n  }\r\n\r\n  onAction(): Observable<any> {\r\n    return this._onAction.asObservable();\r\n  }\r\n}\r\n\r\n/* tslint:disable:no-empty-interface */\r\nexport interface GlobalToastrConfig extends GlobalConfig {}\r\nexport interface IndividualToastrConfig extends IndividualConfig {}\r\nexport interface ToastrConfig extends IndividualConfig {}\r\n","import {\r\n  ComponentRef,\r\n  Injector,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nexport interface ComponentType<T> {\r\n  new (...args: any[]): T;\r\n}\r\n\r\n\r\n/**\r\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\r\n */\r\nexport class ComponentPortal<T> {\r\n  private _attachedHost?: BasePortalHost;\r\n  /** The type of the component that will be instantiated for attachment. */\r\n  component: ComponentType<T>;\r\n\r\n  /**\r\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\r\n   * This is different from where the component *renders*, which is determined by the PortalHost.\r\n   * The origin necessary when the host is outside of the Angular application context.\r\n   */\r\n  viewContainerRef: ViewContainerRef;\r\n\r\n  /** Injector used for the instantiation of the component. */\r\n  injector: Injector;\r\n\r\n  constructor(component: ComponentType<T>, injector: Injector) {\r\n    this.component = component;\r\n    this.injector = injector;\r\n  }\r\n\r\n  /** Attach this portal to a host. */\r\n  attach(host: BasePortalHost, newestOnTop: boolean) {\r\n    this._attachedHost = host;\r\n    return host.attach(this, newestOnTop);\r\n  }\r\n\r\n  /** Detach this portal from its host */\r\n  detach() {\r\n    const host = this._attachedHost;\r\n    if (host) {\r\n      this._attachedHost = undefined;\r\n      return host.detach();\r\n    }\r\n  }\r\n\r\n  /** Whether this portal is attached to a host. */\r\n  get isAttached(): boolean {\r\n    return this._attachedHost != null;\r\n  }\r\n\r\n  /**\r\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\r\n   * the PortalHost when it is performing an `attach()` or `detach()`.\r\n   */\r\n  setAttachedHost(host?: BasePortalHost) {\r\n    this._attachedHost = host;\r\n  }\r\n}\r\n\r\n/**\r\n * Partial implementation of PortalHost that only deals with attaching a\r\n * ComponentPortal\r\n */\r\nexport abstract class BasePortalHost {\r\n  /** The portal currently attached to the host. */\r\n  private _attachedPortal?: ComponentPortal<any>;\r\n\r\n  /** A function that will permanently dispose this host. */\r\n  private _disposeFn?: () => void;\r\n\r\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\r\n    this._attachedPortal = portal;\r\n    return this.attachComponentPortal(portal, newestOnTop);\r\n  }\r\n\r\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\r\n\r\n  detach() {\r\n    if (this._attachedPortal) {\r\n      this._attachedPortal.setAttachedHost();\r\n    }\r\n\r\n    this._attachedPortal = undefined;\r\n    if (this._disposeFn) {\r\n      this._disposeFn();\r\n      this._disposeFn = undefined;\r\n    }\r\n  }\r\n\r\n  setDisposeFn(fn: () => void) {\r\n    this._disposeFn = fn;\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n} from '@angular/core';\r\nimport { BasePortalHost, ComponentPortal } from './portal';\r\n\r\n/**\r\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\r\n * application context.\r\n *\r\n * This is the only part of the portal core that directly touches the DOM.\r\n */\r\nexport class DomPortalHost extends BasePortalHost {\r\n  constructor(\r\n    private _hostDomElement: Element,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\r\n   * @param portal Portal to be attached\r\n   */\r\n  attachComponentPortal<T>(\r\n    portal: ComponentPortal<T>,\r\n    newestOnTop: boolean,\r\n  ): ComponentRef<T> {\r\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(\r\n      portal.component,\r\n    );\r\n    let componentRef: ComponentRef<T>;\r\n\r\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\r\n    // for the component (in terms of Angular's component tree, not rendering).\r\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\r\n    // and then manually attach the ChangeDetector for that component to the application (which\r\n    // happens automatically when using a ViewContainer).\r\n    componentRef = componentFactory.create(portal.injector);\r\n\r\n    // When creating a component outside of a ViewContainer, we need to manually register\r\n    // its ChangeDetector with the application. This API is unfortunately not yet published\r\n    // in Angular core. The change detector must also be deregistered when the component\r\n    // is destroyed to prevent memory leaks.\r\n    this._appRef.attachView(componentRef.hostView);\r\n\r\n    this.setDisposeFn(() => {\r\n      this._appRef.detachView(componentRef.hostView);\r\n      componentRef.destroy();\r\n    });\r\n\r\n    // At this point the component has been instantiated, so we move it to the location in the DOM\r\n    // where we want it to be rendered.\r\n    if (newestOnTop) {\r\n      this._hostDomElement.insertBefore(\r\n        this._getComponentRootNode(componentRef),\r\n        this._hostDomElement.firstChild,\r\n      );\r\n    } else {\r\n      this._hostDomElement.appendChild(\r\n        this._getComponentRootNode(componentRef),\r\n      );\r\n    }\r\n\r\n    return componentRef;\r\n  }\r\n\r\n  /** Gets the root HTMLElement for an instantiated component. */\r\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\r\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n  }\r\n}\r\n","import { ComponentRef } from '@angular/core';\r\nimport { BasePortalHost, ComponentPortal } from '../portal/portal';\r\n\r\n/**\r\n * Reference to an overlay that has been created with the Overlay service.\r\n * Used to manipulate or dispose of said overlay.\r\n */\r\nexport class OverlayRef {\r\n  constructor(private _portalHost: BasePortalHost) {}\r\n\r\n  attach(\r\n    portal: ComponentPortal<any>,\r\n    newestOnTop: boolean = true,\r\n  ): ComponentRef<any> {\r\n    return this._portalHost.attach(portal, newestOnTop);\r\n  }\r\n\r\n  /**\r\n   * Detaches an overlay from a portal.\r\n   * @returns Resolves when the overlay has been detached.\r\n   */\r\n  detach() {\r\n    return this._portalHost.detach();\r\n  }\r\n}\r\n","/**\r\n * The OverlayContainer is the container in which all overlays will load.\r\n * It should be provided in the root component to ensure it is properly shared.\r\n */\r\nexport class OverlayContainer {\r\n  private _containerElement: HTMLElement;\r\n\r\n  /**\r\n   * This method returns the overlay container element.  It will lazily\r\n   * create the element the first time  it is called to facilitate using\r\n   * the container in non-browser environments.\r\n   * @returns the container element\r\n   */\r\n  getContainerElement(): HTMLElement {\r\n    if (!this._containerElement) { this._createContainer(); }\r\n    return this._containerElement;\r\n  }\r\n\r\n  /**\r\n   * Create the overlay container element, which is simply a div\r\n   * with the 'cdk-overlay-container' class on the document body.\r\n   */\r\n  private _createContainer(): void {\r\n    const container = document.createElement('div');\r\n    container.classList.add('overlay-container');\r\n    document.body.appendChild(container);\r\n    this._containerElement = container;\r\n  }\r\n}\r\n","import { ApplicationRef, ComponentFactoryResolver, Injectable } from '@angular/core';\r\nimport { DomPortalHost } from '../portal/dom-portal-host';\r\nimport { OverlayRef } from './overlay-ref';\r\n\r\nimport { ToastContainerDirective } from '../toastr/toast.directive';\r\nimport { OverlayContainer } from './overlay-container';\r\n\r\n/**\r\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\r\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\r\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\r\n * of re-usable components rather than developers building end-user applications.\r\n *\r\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\r\n */\r\n @Injectable()\r\n  export class Overlay {\r\n    // Namespace panes by overlay container\r\n    private _paneElements: Map<ToastContainerDirective, {string?: HTMLElement}> = new Map();\r\n\r\n    constructor(private _overlayContainer: OverlayContainer,\r\n                private _componentFactoryResolver: ComponentFactoryResolver,\r\n                private _appRef: ApplicationRef) {}\r\n  /**\r\n   * Creates an overlay.\r\n   * @returns A reference to the created overlay.\r\n   */\r\n  create(positionClass?: string, overlayContainer?: ToastContainerDirective): OverlayRef {\r\n    // get existing pane if possible\r\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\r\n  }\r\n\r\n  getPaneElement(positionClass: string = '', overlayContainer?: ToastContainerDirective): HTMLElement {\r\n    if (!this._paneElements.get(overlayContainer)) {\r\n      this._paneElements.set(overlayContainer, {});\r\n    }\r\n\r\n    if (!this._paneElements.get(overlayContainer)[positionClass]) {\r\n      this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\r\n    }\r\n\r\n    return this._paneElements.get(overlayContainer)[positionClass];\r\n  }\r\n\r\n  /**\r\n   * Creates the DOM element for an overlay and appends it to the overlay container.\r\n   * @returns Newly-created pane element\r\n   */\r\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\r\n    const pane = document.createElement('div');\r\n    pane.id = 'toast-container';\r\n    pane.classList.add(positionClass);\r\n    pane.classList.add('toast-container');\r\n\r\n    if (!overlayContainer) {\r\n      this._overlayContainer.getContainerElement().appendChild(pane);\r\n    } else {\r\n      overlayContainer.getContainerElement().appendChild(pane);\r\n    }\r\n    return pane;\r\n  }\r\n\r\n  /**\r\n   * Create a DomPortalHost into which the overlay content can be loaded.\r\n   * @param pane The DOM element to turn into a portal host.\r\n   * @returns A portal host for the given DOM element.\r\n   */\r\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\r\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\r\n  }\r\n\r\n  /**\r\n   * Creates an OverlayRef for an overlay in the given DOM element.\r\n   * @param pane DOM element for the overlay\r\n   */\r\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\r\n    return new OverlayRef(this._createPortalHost(pane));\r\n  }\r\n}\r\n\r\n\r\n/** Providers for Overlay and its related injectables. */\r\nexport const OVERLAY_PROVIDERS = [\r\n  Overlay,\r\n  OverlayContainer,\r\n];\r\n","import { Injector } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { OverlayRef } from '../overlay/overlay-ref';\r\nimport { ToastPackage } from './toastr-config';\r\n\r\n/**\r\n * Reference to a toast opened via the Toastr service.\r\n */\r\nexport class ToastRef<T> {\r\n  /** The instance of component opened into the toast. */\r\n  componentInstance: T;\r\n\r\n  /** Subject for notifying the user that the toast has finished closing. */\r\n  private _afterClosed = new Subject<any>();\r\n  /** triggered when toast is activated */\r\n  private _activate = new Subject<any>();\r\n  /** notifies the toast that it should close before the timeout */\r\n  private _manualClose = new Subject<any>();\r\n  /** notifies the toast that it should reset the timeouts */\r\n  private _resetTimeout = new Subject<any>();\r\n\r\n  constructor(private _overlayRef: OverlayRef) {}\r\n\r\n  manualClose() {\r\n    this._manualClose.next();\r\n    this._manualClose.complete();\r\n  }\r\n\r\n  manualClosed(): Observable<any> {\r\n    return this._manualClose.asObservable();\r\n  }\r\n\r\n  timeoutReset(): Observable<any> {\r\n    return this._resetTimeout.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Close the toast.\r\n   */\r\n  close(): void {\r\n    this._overlayRef.detach();\r\n    this._afterClosed.next();\r\n    this._manualClose.next();\r\n    this._afterClosed.complete();\r\n    this._manualClose.complete();\r\n    this._activate.complete();\r\n    this._resetTimeout.complete();\r\n  }\r\n\r\n  /** Gets an observable that is notified when the toast is finished closing. */\r\n  afterClosed(): Observable<any> {\r\n    return this._afterClosed.asObservable();\r\n  }\r\n\r\n  isInactive() {\r\n    return this._activate.isStopped;\r\n  }\r\n\r\n  activate() {\r\n    this._activate.next();\r\n    this._activate.complete();\r\n  }\r\n\r\n  /** Gets an observable that is notified when the toast has started opening. */\r\n  afterActivate(): Observable<any> {\r\n    return this._activate.asObservable();\r\n  }\r\n\r\n  /** Reset the toast timouts */\r\n  resetTimeout() {\r\n    this._resetTimeout.next();\r\n  }\r\n}\r\n\r\n/** Custom injector type specifically for instantiating components with a toast. */\r\nexport class ToastInjector implements Injector {\r\n  constructor(\r\n    private _toastPackage: ToastPackage,\r\n    private _parentInjector: Injector\r\n  ) {}\r\n\r\n  /* tslint:disable:deprecation */\r\n  get(token: any, notFoundValue?: any): any {\r\n    if (token === ToastPackage && this._toastPackage) {\r\n      return this._toastPackage;\r\n    }\r\n    return this._parentInjector.get(token, notFoundValue);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { GlobalConfig } from './toastr-config';\r\n\r\nexport interface ToastToken {\r\n  config: GlobalConfig;\r\n  defaults: any;\r\n}\r\n\r\nexport const TOAST_CONFIG = new InjectionToken<ToastToken>('ToastConfig');\r\n","import {\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  NgZone,\r\n  SecurityContext\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs';\r\nimport { Overlay } from '../overlay/overlay';\r\nimport { ComponentPortal } from '../portal/portal';\r\nimport { ToastInjector, ToastRef } from './toast-injector';\r\nimport { ToastToken, TOAST_CONFIG } from './toast-token';\r\nimport { ToastContainerDirective } from './toast.directive';\r\nimport { GlobalConfig, IndividualConfig, ToastPackage } from './toastr-config';\r\n\r\nexport interface ActiveToast<C> {\r\n  /** Your Toast ID. Use this to close it individually */\r\n  toastId: number;\r\n  /** the message of your toast. Stored to prevent duplicates */\r\n  message: string;\r\n  /** a reference to the component see portal.ts */\r\n  portal: ComponentRef<C>;\r\n  /** a reference to your toast */\r\n  toastRef: ToastRef<C>;\r\n  /** triggered when toast is active */\r\n  onShown: Observable<any>;\r\n  /** triggered when toast is destroyed */\r\n  onHidden: Observable<any>;\r\n  /** triggered on toast click */\r\n  onTap: Observable<any>;\r\n  /** available for your use in custom toast */\r\n  onAction: Observable<any>;\r\n}\r\n\r\n@Injectable()\r\nexport class ToastrService {\r\n  toastrConfig: GlobalConfig;\r\n  currentlyActive = 0;\r\n  toasts: ActiveToast<any>[] = [];\r\n  overlayContainer: ToastContainerDirective;\r\n  previousToastMessage: string | undefined;\r\n  private index = 0;\r\n\r\n  constructor(\r\n    @Inject(TOAST_CONFIG) token: ToastToken,\r\n    private overlay: Overlay,\r\n    private _injector: Injector,\r\n    private sanitizer: DomSanitizer,\r\n    private ngZone: NgZone\r\n  ) {\r\n    const defaultConfig = new token.defaults();\r\n    this.toastrConfig = { ...defaultConfig, ...token.config };\r\n    this.toastrConfig.iconClasses = {\r\n      ...defaultConfig.iconClasses,\r\n      ...token.config.iconClasses\r\n    };\r\n  }\r\n  /** show toast */\r\n  show(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {},\r\n    type = ''\r\n  ) {\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show successful toast */\r\n  success(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.success || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show error toast */\r\n  error(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.error || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show info toast */\r\n  info(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.info || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show warning toast */\r\n  warning(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.warning || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /**\r\n   * Remove all or a single toast by id\r\n   */\r\n  clear(toastId?: number) {\r\n    // Call every toastRef manualClose function\r\n    for (const toast of this.toasts) {\r\n      if (toastId !== undefined) {\r\n        if (toast.toastId === toastId) {\r\n          toast.toastRef.manualClose();\r\n          return;\r\n        }\r\n      } else {\r\n        toast.toastRef.manualClose();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Remove and destroy a single toast by id\r\n   */\r\n  remove(toastId: number) {\r\n    const found = this._findToast(toastId);\r\n    if (!found) {\r\n      return false;\r\n    }\r\n    found.activeToast.toastRef.close();\r\n    this.toasts.splice(found.index, 1);\r\n    this.currentlyActive = this.currentlyActive - 1;\r\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\r\n      return false;\r\n    }\r\n    if (\r\n      this.currentlyActive < this.toastrConfig.maxOpened &&\r\n      this.toasts[this.currentlyActive]\r\n    ) {\r\n      const p = this.toasts[this.currentlyActive].toastRef;\r\n      if (!p.isInactive()) {\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n        p.activate();\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determines if toast message is already shown\r\n   */\r\n  isDuplicate(message: string, resetOnDuplicate: boolean) {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].message === message) {\r\n        if (\r\n          resetOnDuplicate &&\r\n          this.toasts[i].toastRef.componentInstance.resetTimeout\r\n        ) {\r\n          this.toasts[i].toastRef.resetTimeout();\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** create a clone of global config and apply individual settings */\r\n  private applyConfig(override: Partial<IndividualConfig> = {}): GlobalConfig {\r\n    return { ...this.toastrConfig, ...override };\r\n  }\r\n\r\n  /**\r\n   * Find toast object by id\r\n   */\r\n  private _findToast(\r\n    toastId: number\r\n  ): { index: number; activeToast: ActiveToast<any> } | null {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].toastId === toastId) {\r\n        return { index: i, activeToast: this.toasts[i] };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Determines the need to run inside angular's zone then builds the toast\r\n   */\r\n  private _preBuildNotification(\r\n    toastType: string,\r\n    message: string | undefined,\r\n    title: string | undefined,\r\n    config: GlobalConfig\r\n  ): ActiveToast<any> | null {\r\n    if (config.onActivateTick) {\r\n      return this.ngZone.run(() =>\r\n        this._buildNotification(toastType, message, title, config)\r\n      );\r\n    }\r\n    return this._buildNotification(toastType, message, title, config);\r\n  }\r\n\r\n  /**\r\n   * Creates and attaches toast data to component\r\n   * returns null if toast is duplicate and preventDuplicates == True\r\n   */\r\n  private _buildNotification(\r\n    toastType: string,\r\n    message: string | undefined,\r\n    title: string | undefined,\r\n    config: GlobalConfig\r\n  ): ActiveToast<any> | null {\r\n    if (!config.toastComponent) {\r\n      throw new Error('toastComponent required');\r\n    }\r\n    // max opened and auto dismiss = true\r\n    if (\r\n      message &&\r\n      this.toastrConfig.preventDuplicates &&\r\n      this.isDuplicate(message, this.toastrConfig.resetTimeoutOnDuplicate)\r\n    ) {\r\n      return null;\r\n    }\r\n    this.previousToastMessage = message;\r\n    let keepInactive = false;\r\n    if (\r\n      this.toastrConfig.maxOpened &&\r\n      this.currentlyActive >= this.toastrConfig.maxOpened\r\n    ) {\r\n      keepInactive = true;\r\n      if (this.toastrConfig.autoDismiss) {\r\n        this.clear(this.toasts[0].toastId);\r\n      }\r\n    }\r\n    const overlayRef = this.overlay.create(\r\n      config.positionClass,\r\n      this.overlayContainer\r\n    );\r\n    this.index = this.index + 1;\r\n    let trustedMessage: string | SafeHtml | undefined | null = message;\r\n    if (message && config.enableHtml) {\r\n      trustedMessage = this.sanitizer.bypassSecurityTrustHtml(message);\r\n    }\r\n    const toastRef = new ToastRef(overlayRef);\r\n    const toastPackage = new ToastPackage(\r\n      this.index,\r\n      config,\r\n      trustedMessage,\r\n      title,\r\n      toastType,\r\n      toastRef\r\n    );\r\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\r\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\r\n    const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\r\n    toastRef.componentInstance = (<any>portal)._component;\r\n    const ins: ActiveToast<any> = {\r\n      toastId: this.index,\r\n      message: message || '',\r\n      toastRef,\r\n      onShown: toastRef.afterActivate(),\r\n      onHidden: toastRef.afterClosed(),\r\n      onTap: toastPackage.onTap(),\r\n      onAction: toastPackage.onAction(),\r\n      portal\r\n    };\r\n\r\n    if (!keepInactive) {\r\n      setTimeout(() => {\r\n        ins.toastRef.activate();\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n      });\r\n    }\r\n\r\n    this.toasts.push(ins);\r\n    return ins;\r\n  }\r\n}\r\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger\r\n} from '@angular/animations';\r\nimport {\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgZone,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport { IndividualConfig, ToastPackage } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `,\r\n  animations: [\r\n    trigger('flyInOut', [\r\n      state(\r\n        'inactive',\r\n        style({\r\n          display: 'none',\r\n          opacity: 0\r\n        })\r\n      ),\r\n      state('active', style({})),\r\n      state('removed', style({ opacity: 0 })),\r\n      transition(\r\n        'inactive => active',\r\n        animate('{{ easeTime }}ms {{ easing }}')\r\n      ),\r\n      transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\r\n    ])\r\n  ],\r\n  preserveWhitespaces: false\r\n})\r\nexport class Toast implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  originalTimeout: number;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n  /** controls animation */\r\n  @HostBinding('@flyInOut')\r\n  state = {\r\n    value: 'inactive',\r\n    params: {\r\n      easeTime: this.toastPackage.config.easeTime,\r\n      easing: 'ease-in'\r\n    }\r\n  };\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n  private sub2: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected ngZone?: NgZone\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.originalTimeout = toastPackage.config.timeOut;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\r\n      this.resetTimeout();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    this.sub2.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = { ...this.state, value: 'active' };\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.outsideInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = (remaining / this.options.timeOut) * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  resetTimeout() {\r\n    clearTimeout(this.timeout);\r\n    clearInterval(this.intervalId);\r\n    this.state = { ...this.state, value: 'active' };\r\n\r\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\r\n    this.options.timeOut = this.originalTimeout;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.outsideInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state.value === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = { ...this.state, value: 'removed' };\r\n    this.outsideTimeout(\r\n      () => this.toastrService.remove(this.toastPackage.toastId),\r\n      +this.toastPackage.config.easeTime\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state.value === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state.value === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (\r\n      this.options.disableTimeOut ||\r\n      this.options.extendedTimeOut === 0 ||\r\n      this.state.value === 'removed'\r\n    ) {\r\n      return;\r\n    }\r\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.outsideInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n\r\n  outsideTimeout(func: Function, timeout: number) {\r\n    if (this.ngZone) {\r\n      this.ngZone.runOutsideAngular(\r\n        () =>\r\n          (this.timeout = setTimeout(\r\n            () => this.runInsideAngular(func),\r\n            timeout\r\n          ))\r\n      );\r\n    } else {\r\n      this.timeout = setTimeout(() => func(), timeout);\r\n    }\r\n  }\r\n\r\n  outsideInterval(func: Function, timeout: number) {\r\n    if (this.ngZone) {\r\n      this.ngZone.runOutsideAngular(\r\n        () =>\r\n          (this.intervalId = setInterval(\r\n            () => this.runInsideAngular(func),\r\n            timeout\r\n          ))\r\n      );\r\n    } else {\r\n      this.intervalId = setInterval(() => func(), timeout);\r\n    }\r\n  }\r\n\r\n  private runInsideAngular(func: Function) {\r\n    if (this.ngZone) {\r\n      this.ngZone.run(() => func());\r\n    } else {\r\n      func();\r\n    }\r\n  }\r\n}\r\n","import { Toast } from './toast.component';\r\nimport { GlobalConfig } from './toastr-config';\r\n\r\nexport class DefaultGlobalConfig implements GlobalConfig {\r\n  // Global\r\n  maxOpened = 0;\r\n  autoDismiss = false;\r\n  newestOnTop = true;\r\n  preventDuplicates = false;\r\n  resetTimeoutOnDuplicate = false;\r\n  iconClasses = {\r\n    error: 'toast-error',\r\n    info: 'toast-info',\r\n    success: 'toast-success',\r\n    warning: 'toast-warning'\r\n  };\r\n\r\n  // Individual\r\n  toastComponent = Toast;\r\n  closeButton = false;\r\n  disableTimeOut: false;\r\n  timeOut = 5000;\r\n  extendedTimeOut = 1000;\r\n  enableHtml = false;\r\n  progressBar = false;\r\n  toastClass = 'toast';\r\n  positionClass = 'toast-top-right';\r\n  titleClass = 'toast-title';\r\n  messageClass = 'toast-message';\r\n  easing = 'ease-in';\r\n  easeTime = 300;\r\n  tapToDismiss = true;\r\n  onActivateTick = false;\r\n  progressAnimation: 'decreasing' | 'increasing' = 'decreasing';\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ModuleWithProviders,\r\n  NgModule,\r\n  Optional,\r\n  SkipSelf,\r\n} from '@angular/core';\r\n\r\nimport { Overlay } from '../overlay/overlay';\r\nimport { OverlayContainer } from '../overlay/overlay-container';\r\nimport { DefaultGlobalConfig } from './default-config';\r\nimport { TOAST_CONFIG } from './toast-token';\r\nimport { Toast } from './toast.component';\r\nimport { GlobalConfig } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [Toast],\r\n  declarations: [Toast],\r\n  entryComponents: [Toast],\r\n})\r\nexport class ToastrModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: ToastrModule) {\r\n    if (parentModule) {\r\n      throw new Error('ToastrModule is already loaded. It should only be imported in your application\\'s main module.');\r\n    }\r\n  }\r\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastrModule,\r\n      providers: [\r\n        { provide: TOAST_CONFIG, useValue: { config, defaults: DefaultGlobalConfig } },\r\n        OverlayContainer,\r\n        Overlay,\r\n        ToastrService,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgModule,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport { IndividualConfig, ToastPackage } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `\r\n})\r\nexport class ToastNoAnimation implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  originalTimeout: number;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n\r\n  @HostBinding('style.display')\r\n  get displayStyle() {\r\n    if (this.state === 'inactive') {\r\n      return 'none';\r\n    }\r\n    return 'inherit';\r\n  }\r\n\r\n  /** controls animation */\r\n  state = 'inactive';\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n  private sub2: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected appRef: ApplicationRef\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.originalTimeout = toastPackage.config.timeOut;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\r\n      this.resetTimeout();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    this.sub2.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = 'active';\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.timeout = setTimeout(() => {\r\n        this.remove();\r\n      }, this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n    if (this.options.onActivateTick) {\r\n      this.appRef.tick();\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = (remaining / this.options.timeOut) * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  resetTimeout() {\r\n    clearTimeout(this.timeout);\r\n    clearInterval(this.intervalId);\r\n    this.state = 'active';\r\n\r\n    this.options.timeOut = this.originalTimeout;\r\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\r\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = 'removed';\r\n    this.timeout = setTimeout(() =>\r\n      this.toastrService.remove(this.toastPackage.toastId)\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (\r\n      this.options.disableTimeOut ||\r\n      this.options.extendedTimeOut === 0 ||\r\n      this.state === 'removed'\r\n    ) {\r\n      return;\r\n    }\r\n    this.timeout = setTimeout(\r\n      () => this.remove(),\r\n      this.options.extendedTimeOut\r\n    );\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ToastNoAnimation],\r\n  exports: [ToastNoAnimation],\r\n  entryComponents: [ToastNoAnimation]\r\n})\r\nexport class ToastNoAnimationModule {}\r\n"],"names":["Directive","ElementRef","NgModule","Subject","tslib_1.__extends","Injectable","ComponentFactoryResolver","ApplicationRef","InjectionToken","tslib_1.__values","Inject","Injector","DomSanitizer","NgZone","Component","trigger","state","style","transition","animate","HostBinding","HostListener","CommonModule","Optional","SkipSelf"],"mappings":"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"}
