{"version":3,"file":"ngx-toastr.js.map","sources":["ng://ngx-toastr/toastr/toast.directive.ts","ng://ngx-toastr/toastr/toastr-config.ts","ng://ngx-toastr/portal/portal.ts","ng://ngx-toastr/portal/dom-portal-host.ts","ng://ngx-toastr/overlay/overlay-ref.ts","ng://ngx-toastr/overlay/overlay-container.ts","ng://ngx-toastr/overlay/overlay.ts","ng://ngx-toastr/toastr/toast-injector.ts","ng://ngx-toastr/toastr/toast-token.ts","ng://ngx-toastr/toastr/toastr.service.ts","ng://ngx-toastr/toastr/toast.component.ts","ng://ngx-toastr/toastr/default-config.ts","ng://ngx-toastr/toastr/toastr.module.ts","ng://ngx-toastr/toastr/toast-noanimation.component.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  NgModule,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[toastContainer]',\r\n  exportAs: 'toastContainer',\r\n})\r\nexport class ToastContainerDirective {\r\n  constructor(private el: ElementRef) { }\r\n  getContainerElement(): HTMLElement {\r\n    return this.el.nativeElement;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ToastContainerDirective],\r\n  exports: [ToastContainerDirective],\r\n})\r\nexport class ToastContainerModule {}\r\n","import { SafeHtml } from '@angular/platform-browser';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ComponentType } from '../portal/portal';\r\nimport { ToastRef } from './toast-injector';\r\n\r\n/**\r\n * Configuration for an individual toast.\r\n */\r\nexport interface IndividualConfig {\r\n  /**\r\n   * disable both timeOut and extendedTimeOut\r\n   * default: false\r\n   */\r\n  disableTimeOut: boolean;\r\n  /**\r\n   * toast time to live in milliseconds\r\n   * default: 5000\r\n   */\r\n  timeOut: number;\r\n  /**\r\n   * toast show close button\r\n   * default: false\r\n   */\r\n  closeButton: boolean;\r\n  /**\r\n   * time to close after a user hovers over toast\r\n   * default: 1000\r\n   */\r\n  extendedTimeOut: number;\r\n  /**\r\n   * show toast progress bar\r\n   * default: false\r\n   */\r\n  progressBar: boolean;\r\n\r\n  /**\r\n   * changes toast progress bar animation\r\n   * default: decreasing\r\n   */\r\n  progressAnimation?: 'increasing' | 'decreasing';\r\n  /**\r\n   * render html in toast message (possibly unsafe)\r\n   * default: false\r\n   */\r\n  enableHtml: boolean;\r\n  /**\r\n   * css class on toast component\r\n   * default: toast\r\n   */\r\n  toastClass: string;\r\n  /**\r\n   * css class on toast container\r\n   * default: toast-top-right\r\n   */\r\n  positionClass: string;\r\n  /**\r\n   * css class on toast title\r\n   * default: toast-title\r\n   */\r\n  titleClass: string;\r\n  /**\r\n   * css class on toast message\r\n   * default: toast-message\r\n   */\r\n  messageClass: string;\r\n  /**\r\n   * animation easing on toast\r\n   * default: ease-in\r\n   */\r\n  easing: string;\r\n  /**\r\n   * animation ease time on toast\r\n   * default: 300\r\n   */\r\n  easeTime: string | number;\r\n  /**\r\n   * clicking on toast dismisses it\r\n   * default: true\r\n   */\r\n  tapToDismiss: boolean;\r\n  /**\r\n   * Angular toast component to be shown\r\n   * default: Toast\r\n   */\r\n  toastComponent: ComponentType<any>;\r\n  /**\r\n   * Helps show toast from a websocket or from event outside Angular\r\n   * default: false\r\n   */\r\n  onActivateTick: boolean;\r\n}\r\n\r\nexport interface ToastrIconClasses {\r\n  error: string;\r\n  info: string;\r\n  success: string;\r\n  warning: string;\r\n}\r\n\r\n/**\r\n * Global Toast configuration\r\n * Includes all IndividualConfig\r\n */\r\nexport interface GlobalConfig extends IndividualConfig {\r\n  /**\r\n   * max toasts opened. Toasts will be queued\r\n   * Zero is unlimited\r\n   * default: 0\r\n   */\r\n  maxOpened: number;\r\n  /**\r\n   * dismiss current toast when max is reached\r\n   * default: false\r\n   */\r\n  autoDismiss: boolean;\r\n  iconClasses: Partial<ToastrIconClasses>;\r\n  /**\r\n   * New toast placement\r\n   * default: true\r\n   */\r\n  newestOnTop: boolean;\r\n  /**\r\n   * block duplicate messages\r\n   * default: false\r\n   */\r\n  preventDuplicates: boolean;\r\n\r\n  /**\r\n   * Reset toast timeout when there's a duplicate (preventDuplicates needs to be set to true)\r\n   * default: false\r\n   */\r\n  resetTimeoutOnDuplicate: boolean;\r\n}\r\n\r\n/**\r\n * Everything a toast needs to launch\r\n */\r\nexport class ToastPackage {\r\n  private _onTap = new Subject<any>();\r\n  private _onAction = new Subject<any>();\r\n\r\n  constructor(\r\n    public toastId: number,\r\n    public config: IndividualConfig,\r\n    public message: string | SafeHtml | null | undefined,\r\n    public title: string | undefined,\r\n    public toastType: string,\r\n    public toastRef: ToastRef<any>\r\n  ) {\r\n    this.toastRef.afterClosed().subscribe(() => {\r\n      this._onAction.complete();\r\n      this._onTap.complete();\r\n    });\r\n  }\r\n\r\n  /** Fired on click */\r\n  triggerTap() {\r\n    this._onTap.next();\r\n    if (this.config.tapToDismiss) {\r\n      this._onTap.complete();\r\n    }\r\n  }\r\n\r\n  onTap(): Observable<any> {\r\n    return this._onTap.asObservable();\r\n  }\r\n\r\n  /** available for use in custom toast */\r\n  triggerAction(action?: any) {\r\n    this._onAction.next(action);\r\n  }\r\n\r\n  onAction(): Observable<any> {\r\n    return this._onAction.asObservable();\r\n  }\r\n}\r\n\r\n/* tslint:disable:no-empty-interface */\r\nexport interface GlobalToastrConfig extends GlobalConfig {}\r\nexport interface IndividualToastrConfig extends IndividualConfig {}\r\nexport interface ToastrConfig extends IndividualConfig {}\r\n","import {\r\n  ComponentRef,\r\n  Injector,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nexport interface ComponentType<T> {\r\n  new (...args: any[]): T;\r\n}\r\n\r\n\r\n/**\r\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\r\n */\r\nexport class ComponentPortal<T> {\r\n  private _attachedHost?: BasePortalHost;\r\n  /** The type of the component that will be instantiated for attachment. */\r\n  component: ComponentType<T>;\r\n\r\n  /**\r\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\r\n   * This is different from where the component *renders*, which is determined by the PortalHost.\r\n   * The origin necessary when the host is outside of the Angular application context.\r\n   */\r\n  viewContainerRef: ViewContainerRef;\r\n\r\n  /** Injector used for the instantiation of the component. */\r\n  injector: Injector;\r\n\r\n  constructor(component: ComponentType<T>, injector: Injector) {\r\n    this.component = component;\r\n    this.injector = injector;\r\n  }\r\n\r\n  /** Attach this portal to a host. */\r\n  attach(host: BasePortalHost, newestOnTop: boolean) {\r\n    this._attachedHost = host;\r\n    return host.attach(this, newestOnTop);\r\n  }\r\n\r\n  /** Detach this portal from its host */\r\n  detach() {\r\n    const host = this._attachedHost;\r\n    if (host) {\r\n      this._attachedHost = undefined;\r\n      return host.detach();\r\n    }\r\n  }\r\n\r\n  /** Whether this portal is attached to a host. */\r\n  get isAttached(): boolean {\r\n    return this._attachedHost != null;\r\n  }\r\n\r\n  /**\r\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\r\n   * the PortalHost when it is performing an `attach()` or `detach()`.\r\n   */\r\n  setAttachedHost(host?: BasePortalHost) {\r\n    this._attachedHost = host;\r\n  }\r\n}\r\n\r\n/**\r\n * Partial implementation of PortalHost that only deals with attaching a\r\n * ComponentPortal\r\n */\r\nexport abstract class BasePortalHost {\r\n  /** The portal currently attached to the host. */\r\n  private _attachedPortal?: ComponentPortal<any>;\r\n\r\n  /** A function that will permanently dispose this host. */\r\n  private _disposeFn?: () => void;\r\n\r\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\r\n    this._attachedPortal = portal;\r\n    return this.attachComponentPortal(portal, newestOnTop);\r\n  }\r\n\r\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\r\n\r\n  detach() {\r\n    if (this._attachedPortal) {\r\n      this._attachedPortal.setAttachedHost();\r\n    }\r\n\r\n    this._attachedPortal = undefined;\r\n    if (this._disposeFn) {\r\n      this._disposeFn();\r\n      this._disposeFn = undefined;\r\n    }\r\n  }\r\n\r\n  setDisposeFn(fn: () => void) {\r\n    this._disposeFn = fn;\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n} from '@angular/core';\r\nimport { BasePortalHost, ComponentPortal } from './portal';\r\n\r\n/**\r\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\r\n * application context.\r\n *\r\n * This is the only part of the portal core that directly touches the DOM.\r\n */\r\nexport class DomPortalHost extends BasePortalHost {\r\n  constructor(\r\n    private _hostDomElement: Element,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\r\n   * @param portal Portal to be attached\r\n   */\r\n  attachComponentPortal<T>(\r\n    portal: ComponentPortal<T>,\r\n    newestOnTop: boolean,\r\n  ): ComponentRef<T> {\r\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(\r\n      portal.component,\r\n    );\r\n    let componentRef: ComponentRef<T>;\r\n\r\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\r\n    // for the component (in terms of Angular's component tree, not rendering).\r\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\r\n    // and then manually attach the ChangeDetector for that component to the application (which\r\n    // happens automatically when using a ViewContainer).\r\n    componentRef = componentFactory.create(portal.injector);\r\n\r\n    // When creating a component outside of a ViewContainer, we need to manually register\r\n    // its ChangeDetector with the application. This API is unfortunately not yet published\r\n    // in Angular core. The change detector must also be deregistered when the component\r\n    // is destroyed to prevent memory leaks.\r\n    this._appRef.attachView(componentRef.hostView);\r\n\r\n    this.setDisposeFn(() => {\r\n      this._appRef.detachView(componentRef.hostView);\r\n      componentRef.destroy();\r\n    });\r\n\r\n    // At this point the component has been instantiated, so we move it to the location in the DOM\r\n    // where we want it to be rendered.\r\n    if (newestOnTop) {\r\n      this._hostDomElement.insertBefore(\r\n        this._getComponentRootNode(componentRef),\r\n        this._hostDomElement.firstChild,\r\n      );\r\n    } else {\r\n      this._hostDomElement.appendChild(\r\n        this._getComponentRootNode(componentRef),\r\n      );\r\n    }\r\n\r\n    return componentRef;\r\n  }\r\n\r\n  /** Gets the root HTMLElement for an instantiated component. */\r\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\r\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n  }\r\n}\r\n","import { ComponentRef } from '@angular/core';\r\nimport { BasePortalHost, ComponentPortal } from '../portal/portal';\r\n\r\n/**\r\n * Reference to an overlay that has been created with the Overlay service.\r\n * Used to manipulate or dispose of said overlay.\r\n */\r\nexport class OverlayRef {\r\n  constructor(private _portalHost: BasePortalHost) {}\r\n\r\n  attach(\r\n    portal: ComponentPortal<any>,\r\n    newestOnTop: boolean = true,\r\n  ): ComponentRef<any> {\r\n    return this._portalHost.attach(portal, newestOnTop);\r\n  }\r\n\r\n  /**\r\n   * Detaches an overlay from a portal.\r\n   * @returns Resolves when the overlay has been detached.\r\n   */\r\n  detach() {\r\n    return this._portalHost.detach();\r\n  }\r\n}\r\n","/**\r\n * The OverlayContainer is the container in which all overlays will load.\r\n * It should be provided in the root component to ensure it is properly shared.\r\n */\r\nexport class OverlayContainer {\r\n  private _containerElement: HTMLElement;\r\n\r\n  /**\r\n   * This method returns the overlay container element.  It will lazily\r\n   * create the element the first time  it is called to facilitate using\r\n   * the container in non-browser environments.\r\n   * @returns the container element\r\n   */\r\n  getContainerElement(): HTMLElement {\r\n    if (!this._containerElement) { this._createContainer(); }\r\n    return this._containerElement;\r\n  }\r\n\r\n  /**\r\n   * Create the overlay container element, which is simply a div\r\n   * with the 'cdk-overlay-container' class on the document body.\r\n   */\r\n  private _createContainer(): void {\r\n    const container = document.createElement('div');\r\n    container.classList.add('overlay-container');\r\n    document.body.appendChild(container);\r\n    this._containerElement = container;\r\n  }\r\n}\r\n","import { ApplicationRef, ComponentFactoryResolver, Injectable } from '@angular/core';\r\nimport { DomPortalHost } from '../portal/dom-portal-host';\r\nimport { OverlayRef } from './overlay-ref';\r\n\r\nimport { ToastContainerDirective } from '../toastr/toast.directive';\r\nimport { OverlayContainer } from './overlay-container';\r\n\r\n/**\r\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\r\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\r\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\r\n * of re-usable components rather than developers building end-user applications.\r\n *\r\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\r\n */\r\n @Injectable()\r\n  export class Overlay {\r\n    // Namespace panes by overlay container\r\n    private _paneElements: Map<ToastContainerDirective, {string?: HTMLElement}> = new Map();\r\n\r\n    constructor(private _overlayContainer: OverlayContainer,\r\n                private _componentFactoryResolver: ComponentFactoryResolver,\r\n                private _appRef: ApplicationRef) {}\r\n  /**\r\n   * Creates an overlay.\r\n   * @returns A reference to the created overlay.\r\n   */\r\n  create(positionClass?: string, overlayContainer?: ToastContainerDirective): OverlayRef {\r\n    // get existing pane if possible\r\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\r\n  }\r\n\r\n  getPaneElement(positionClass: string = '', overlayContainer?: ToastContainerDirective): HTMLElement {\r\n    if (!this._paneElements.get(overlayContainer)) {\r\n      this._paneElements.set(overlayContainer, {});\r\n    }\r\n\r\n    if (!this._paneElements.get(overlayContainer)[positionClass]) {\r\n      this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\r\n    }\r\n\r\n    return this._paneElements.get(overlayContainer)[positionClass];\r\n  }\r\n\r\n  /**\r\n   * Creates the DOM element for an overlay and appends it to the overlay container.\r\n   * @returns Newly-created pane element\r\n   */\r\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\r\n    const pane = document.createElement('div');\r\n    pane.id = 'toast-container';\r\n    pane.classList.add(positionClass);\r\n    pane.classList.add('toast-container');\r\n\r\n    if (!overlayContainer) {\r\n      this._overlayContainer.getContainerElement().appendChild(pane);\r\n    } else {\r\n      overlayContainer.getContainerElement().appendChild(pane);\r\n    }\r\n    return pane;\r\n  }\r\n\r\n  /**\r\n   * Create a DomPortalHost into which the overlay content can be loaded.\r\n   * @param pane The DOM element to turn into a portal host.\r\n   * @returns A portal host for the given DOM element.\r\n   */\r\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\r\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\r\n  }\r\n\r\n  /**\r\n   * Creates an OverlayRef for an overlay in the given DOM element.\r\n   * @param pane DOM element for the overlay\r\n   */\r\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\r\n    return new OverlayRef(this._createPortalHost(pane));\r\n  }\r\n}\r\n\r\n\r\n/** Providers for Overlay and its related injectables. */\r\nexport const OVERLAY_PROVIDERS = [\r\n  Overlay,\r\n  OverlayContainer,\r\n];\r\n","import { Injector } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { OverlayRef } from '../overlay/overlay-ref';\r\nimport { ToastPackage } from './toastr-config';\r\n\r\n/**\r\n * Reference to a toast opened via the Toastr service.\r\n */\r\nexport class ToastRef<T> {\r\n  /** The instance of component opened into the toast. */\r\n  componentInstance: T;\r\n\r\n  /** Subject for notifying the user that the toast has finished closing. */\r\n  private _afterClosed = new Subject<any>();\r\n  /** triggered when toast is activated */\r\n  private _activate = new Subject<any>();\r\n  /** notifies the toast that it should close before the timeout */\r\n  private _manualClose = new Subject<any>();\r\n  /** notifies the toast that it should reset the timeouts */\r\n  private _resetTimeout = new Subject<any>();\r\n\r\n  constructor(private _overlayRef: OverlayRef) {}\r\n\r\n  manualClose() {\r\n    this._manualClose.next();\r\n    this._manualClose.complete();\r\n  }\r\n\r\n  manualClosed(): Observable<any> {\r\n    return this._manualClose.asObservable();\r\n  }\r\n\r\n  timeoutReset(): Observable<any> {\r\n    return this._resetTimeout.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Close the toast.\r\n   */\r\n  close(): void {\r\n    this._overlayRef.detach();\r\n    this._afterClosed.next();\r\n    this._manualClose.next();\r\n    this._afterClosed.complete();\r\n    this._manualClose.complete();\r\n    this._activate.complete();\r\n    this._resetTimeout.complete();\r\n  }\r\n\r\n  /** Gets an observable that is notified when the toast is finished closing. */\r\n  afterClosed(): Observable<any> {\r\n    return this._afterClosed.asObservable();\r\n  }\r\n\r\n  isInactive() {\r\n    return this._activate.isStopped;\r\n  }\r\n\r\n  activate() {\r\n    this._activate.next();\r\n    this._activate.complete();\r\n  }\r\n\r\n  /** Gets an observable that is notified when the toast has started opening. */\r\n  afterActivate(): Observable<any> {\r\n    return this._activate.asObservable();\r\n  }\r\n\r\n  /** Reset the toast timouts */\r\n  resetTimeout() {\r\n    this._resetTimeout.next();\r\n  }\r\n}\r\n\r\n/** Custom injector type specifically for instantiating components with a toast. */\r\nexport class ToastInjector implements Injector {\r\n  constructor(\r\n    private _toastPackage: ToastPackage,\r\n    private _parentInjector: Injector\r\n  ) {}\r\n\r\n  /* tslint:disable:deprecation */\r\n  get(token: any, notFoundValue?: any): any {\r\n    if (token === ToastPackage && this._toastPackage) {\r\n      return this._toastPackage;\r\n    }\r\n    return this._parentInjector.get(token, notFoundValue);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { GlobalConfig } from './toastr-config';\r\n\r\nexport interface ToastToken {\r\n  config: GlobalConfig;\r\n  defaults: any;\r\n}\r\n\r\nexport const TOAST_CONFIG = new InjectionToken<ToastToken>('ToastConfig');\r\n","import {\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  NgZone,\r\n  SecurityContext\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs';\r\nimport { Overlay } from '../overlay/overlay';\r\nimport { ComponentPortal } from '../portal/portal';\r\nimport { ToastInjector, ToastRef } from './toast-injector';\r\nimport { ToastToken, TOAST_CONFIG } from './toast-token';\r\nimport { ToastContainerDirective } from './toast.directive';\r\nimport { GlobalConfig, IndividualConfig, ToastPackage } from './toastr-config';\r\n\r\nexport interface ActiveToast<C> {\r\n  /** Your Toast ID. Use this to close it individually */\r\n  toastId: number;\r\n  /** the message of your toast. Stored to prevent duplicates */\r\n  message: string;\r\n  /** a reference to the component see portal.ts */\r\n  portal: ComponentRef<C>;\r\n  /** a reference to your toast */\r\n  toastRef: ToastRef<C>;\r\n  /** triggered when toast is active */\r\n  onShown: Observable<any>;\r\n  /** triggered when toast is destroyed */\r\n  onHidden: Observable<any>;\r\n  /** triggered on toast click */\r\n  onTap: Observable<any>;\r\n  /** available for your use in custom toast */\r\n  onAction: Observable<any>;\r\n}\r\n\r\n@Injectable()\r\nexport class ToastrService {\r\n  toastrConfig: GlobalConfig;\r\n  currentlyActive = 0;\r\n  toasts: ActiveToast<any>[] = [];\r\n  overlayContainer: ToastContainerDirective;\r\n  previousToastMessage: string | undefined;\r\n  private index = 0;\r\n\r\n  constructor(\r\n    @Inject(TOAST_CONFIG) token: ToastToken,\r\n    private overlay: Overlay,\r\n    private _injector: Injector,\r\n    private sanitizer: DomSanitizer,\r\n    private ngZone: NgZone\r\n  ) {\r\n    const defaultConfig = new token.defaults();\r\n    this.toastrConfig = { ...defaultConfig, ...token.config };\r\n    this.toastrConfig.iconClasses = {\r\n      ...defaultConfig.iconClasses,\r\n      ...token.config.iconClasses\r\n    };\r\n  }\r\n  /** show toast */\r\n  show(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {},\r\n    type = ''\r\n  ) {\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show successful toast */\r\n  success(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.success || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show error toast */\r\n  error(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.error || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show info toast */\r\n  info(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.info || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /** show warning toast */\r\n  warning(\r\n    message?: string,\r\n    title?: string,\r\n    override: Partial<IndividualConfig> = {}\r\n  ) {\r\n    const type = this.toastrConfig.iconClasses.warning || '';\r\n    return this._preBuildNotification(\r\n      type,\r\n      message,\r\n      title,\r\n      this.applyConfig(override)\r\n    );\r\n  }\r\n  /**\r\n   * Remove all or a single toast by id\r\n   */\r\n  clear(toastId?: number) {\r\n    // Call every toastRef manualClose function\r\n    for (const toast of this.toasts) {\r\n      if (toastId !== undefined) {\r\n        if (toast.toastId === toastId) {\r\n          toast.toastRef.manualClose();\r\n          return;\r\n        }\r\n      } else {\r\n        toast.toastRef.manualClose();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Remove and destroy a single toast by id\r\n   */\r\n  remove(toastId: number) {\r\n    const found = this._findToast(toastId);\r\n    if (!found) {\r\n      return false;\r\n    }\r\n    found.activeToast.toastRef.close();\r\n    this.toasts.splice(found.index, 1);\r\n    this.currentlyActive = this.currentlyActive - 1;\r\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\r\n      return false;\r\n    }\r\n    if (\r\n      this.currentlyActive < this.toastrConfig.maxOpened &&\r\n      this.toasts[this.currentlyActive]\r\n    ) {\r\n      const p = this.toasts[this.currentlyActive].toastRef;\r\n      if (!p.isInactive()) {\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n        p.activate();\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determines if toast message is already shown\r\n   */\r\n  isDuplicate(message: string, resetOnDuplicate: boolean) {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].message === message) {\r\n        if (\r\n          resetOnDuplicate &&\r\n          this.toasts[i].toastRef.componentInstance.resetTimeout\r\n        ) {\r\n          this.toasts[i].toastRef.resetTimeout();\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** create a clone of global config and apply individual settings */\r\n  private applyConfig(override: Partial<IndividualConfig> = {}): GlobalConfig {\r\n    return { ...this.toastrConfig, ...override };\r\n  }\r\n\r\n  /**\r\n   * Find toast object by id\r\n   */\r\n  private _findToast(\r\n    toastId: number\r\n  ): { index: number; activeToast: ActiveToast<any> } | null {\r\n    for (let i = 0; i < this.toasts.length; i++) {\r\n      if (this.toasts[i].toastId === toastId) {\r\n        return { index: i, activeToast: this.toasts[i] };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Determines the need to run inside angular's zone then builds the toast\r\n   */\r\n  private _preBuildNotification(\r\n    toastType: string,\r\n    message: string | undefined,\r\n    title: string | undefined,\r\n    config: GlobalConfig\r\n  ): ActiveToast<any> | null {\r\n    if (config.onActivateTick) {\r\n      return this.ngZone.run(() =>\r\n        this._buildNotification(toastType, message, title, config)\r\n      );\r\n    }\r\n    return this._buildNotification(toastType, message, title, config);\r\n  }\r\n\r\n  /**\r\n   * Creates and attaches toast data to component\r\n   * returns null if toast is duplicate and preventDuplicates == True\r\n   */\r\n  private _buildNotification(\r\n    toastType: string,\r\n    message: string | undefined,\r\n    title: string | undefined,\r\n    config: GlobalConfig\r\n  ): ActiveToast<any> | null {\r\n    if (!config.toastComponent) {\r\n      throw new Error('toastComponent required');\r\n    }\r\n    // max opened and auto dismiss = true\r\n    if (\r\n      message &&\r\n      this.toastrConfig.preventDuplicates &&\r\n      this.isDuplicate(message, this.toastrConfig.resetTimeoutOnDuplicate)\r\n    ) {\r\n      return null;\r\n    }\r\n    this.previousToastMessage = message;\r\n    let keepInactive = false;\r\n    if (\r\n      this.toastrConfig.maxOpened &&\r\n      this.currentlyActive >= this.toastrConfig.maxOpened\r\n    ) {\r\n      keepInactive = true;\r\n      if (this.toastrConfig.autoDismiss) {\r\n        this.clear(this.toasts[0].toastId);\r\n      }\r\n    }\r\n    const overlayRef = this.overlay.create(\r\n      config.positionClass,\r\n      this.overlayContainer\r\n    );\r\n    this.index = this.index + 1;\r\n    let trustedMessage: string | SafeHtml | undefined | null = message;\r\n    if (message && config.enableHtml) {\r\n      trustedMessage = this.sanitizer.bypassSecurityTrustHtml(message);\r\n    }\r\n    const toastRef = new ToastRef(overlayRef);\r\n    const toastPackage = new ToastPackage(\r\n      this.index,\r\n      config,\r\n      trustedMessage,\r\n      title,\r\n      toastType,\r\n      toastRef\r\n    );\r\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\r\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\r\n    const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\r\n    toastRef.componentInstance = (<any>portal)._component;\r\n    const ins: ActiveToast<any> = {\r\n      toastId: this.index,\r\n      message: message || '',\r\n      toastRef,\r\n      onShown: toastRef.afterActivate(),\r\n      onHidden: toastRef.afterClosed(),\r\n      onTap: toastPackage.onTap(),\r\n      onAction: toastPackage.onAction(),\r\n      portal\r\n    };\r\n\r\n    if (!keepInactive) {\r\n      setTimeout(() => {\r\n        ins.toastRef.activate();\r\n        this.currentlyActive = this.currentlyActive + 1;\r\n      });\r\n    }\r\n\r\n    this.toasts.push(ins);\r\n    return ins;\r\n  }\r\n}\r\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger\r\n} from '@angular/animations';\r\nimport {\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgZone,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport { IndividualConfig, ToastPackage } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `,\r\n  animations: [\r\n    trigger('flyInOut', [\r\n      state(\r\n        'inactive',\r\n        style({\r\n          display: 'none',\r\n          opacity: 0\r\n        })\r\n      ),\r\n      state('active', style({})),\r\n      state('removed', style({ opacity: 0 })),\r\n      transition(\r\n        'inactive => active',\r\n        animate('{{ easeTime }}ms {{ easing }}')\r\n      ),\r\n      transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\r\n    ])\r\n  ],\r\n  preserveWhitespaces: false\r\n})\r\nexport class Toast implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  originalTimeout: number;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n  /** controls animation */\r\n  @HostBinding('@flyInOut')\r\n  state = {\r\n    value: 'inactive',\r\n    params: {\r\n      easeTime: this.toastPackage.config.easeTime,\r\n      easing: 'ease-in'\r\n    }\r\n  };\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n  private sub2: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected ngZone?: NgZone\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.originalTimeout = toastPackage.config.timeOut;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\r\n      this.resetTimeout();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    this.sub2.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = { ...this.state, value: 'active' };\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.outsideInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = (remaining / this.options.timeOut) * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  resetTimeout() {\r\n    clearTimeout(this.timeout);\r\n    clearInterval(this.intervalId);\r\n    this.state = { ...this.state, value: 'active' };\r\n\r\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\r\n    this.options.timeOut = this.originalTimeout;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.outsideInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state.value === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = { ...this.state, value: 'removed' };\r\n    this.outsideTimeout(\r\n      () => this.toastrService.remove(this.toastPackage.toastId),\r\n      +this.toastPackage.config.easeTime\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state.value === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state.value === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (\r\n      this.options.disableTimeOut ||\r\n      this.options.extendedTimeOut === 0 ||\r\n      this.state.value === 'removed'\r\n    ) {\r\n      return;\r\n    }\r\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.outsideInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n\r\n  outsideTimeout(func: Function, timeout: number) {\r\n    if (this.ngZone) {\r\n      this.ngZone.runOutsideAngular(\r\n        () =>\r\n          (this.timeout = setTimeout(\r\n            () => this.runInsideAngular(func),\r\n            timeout\r\n          ))\r\n      );\r\n    } else {\r\n      this.timeout = setTimeout(() => func(), timeout);\r\n    }\r\n  }\r\n\r\n  outsideInterval(func: Function, timeout: number) {\r\n    if (this.ngZone) {\r\n      this.ngZone.runOutsideAngular(\r\n        () =>\r\n          (this.intervalId = setInterval(\r\n            () => this.runInsideAngular(func),\r\n            timeout\r\n          ))\r\n      );\r\n    } else {\r\n      this.intervalId = setInterval(() => func(), timeout);\r\n    }\r\n  }\r\n\r\n  private runInsideAngular(func: Function) {\r\n    if (this.ngZone) {\r\n      this.ngZone.run(() => func());\r\n    } else {\r\n      func();\r\n    }\r\n  }\r\n}\r\n","import { Toast } from './toast.component';\r\nimport { GlobalConfig } from './toastr-config';\r\n\r\nexport class DefaultGlobalConfig implements GlobalConfig {\r\n  // Global\r\n  maxOpened = 0;\r\n  autoDismiss = false;\r\n  newestOnTop = true;\r\n  preventDuplicates = false;\r\n  resetTimeoutOnDuplicate = false;\r\n  iconClasses = {\r\n    error: 'toast-error',\r\n    info: 'toast-info',\r\n    success: 'toast-success',\r\n    warning: 'toast-warning'\r\n  };\r\n\r\n  // Individual\r\n  toastComponent = Toast;\r\n  closeButton = false;\r\n  disableTimeOut: false;\r\n  timeOut = 5000;\r\n  extendedTimeOut = 1000;\r\n  enableHtml = false;\r\n  progressBar = false;\r\n  toastClass = 'toast';\r\n  positionClass = 'toast-top-right';\r\n  titleClass = 'toast-title';\r\n  messageClass = 'toast-message';\r\n  easing = 'ease-in';\r\n  easeTime = 300;\r\n  tapToDismiss = true;\r\n  onActivateTick = false;\r\n  progressAnimation: 'decreasing' | 'increasing' = 'decreasing';\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ModuleWithProviders,\r\n  NgModule,\r\n  Optional,\r\n  SkipSelf,\r\n} from '@angular/core';\r\n\r\nimport { Overlay } from '../overlay/overlay';\r\nimport { OverlayContainer } from '../overlay/overlay-container';\r\nimport { DefaultGlobalConfig } from './default-config';\r\nimport { TOAST_CONFIG } from './toast-token';\r\nimport { Toast } from './toast.component';\r\nimport { GlobalConfig } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [Toast],\r\n  declarations: [Toast],\r\n  entryComponents: [Toast],\r\n})\r\nexport class ToastrModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: ToastrModule) {\r\n    if (parentModule) {\r\n      throw new Error('ToastrModule is already loaded. It should only be imported in your application\\'s main module.');\r\n    }\r\n  }\r\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastrModule,\r\n      providers: [\r\n        { provide: TOAST_CONFIG, useValue: { config, defaults: DefaultGlobalConfig } },\r\n        OverlayContainer,\r\n        Overlay,\r\n        ToastrService,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgModule,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport { IndividualConfig, ToastPackage } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `\r\n})\r\nexport class ToastNoAnimation implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  originalTimeout: number;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n\r\n  @HostBinding('style.display')\r\n  get displayStyle() {\r\n    if (this.state === 'inactive') {\r\n      return 'none';\r\n    }\r\n    return 'inherit';\r\n  }\r\n\r\n  /** controls animation */\r\n  state = 'inactive';\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n  private sub2: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected appRef: ApplicationRef\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.originalTimeout = toastPackage.config.timeOut;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\r\n      this.resetTimeout();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    this.sub2.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = 'active';\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.timeout = setTimeout(() => {\r\n        this.remove();\r\n      }, this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n    if (this.options.onActivateTick) {\r\n      this.appRef.tick();\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = (remaining / this.options.timeOut) * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  resetTimeout() {\r\n    clearTimeout(this.timeout);\r\n    clearInterval(this.intervalId);\r\n    this.state = 'active';\r\n\r\n    this.options.timeOut = this.originalTimeout;\r\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\r\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = 'removed';\r\n    this.timeout = setTimeout(() =>\r\n      this.toastrService.remove(this.toastPackage.toastId)\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (\r\n      this.options.disableTimeOut ||\r\n      this.options.extendedTimeOut === 0 ||\r\n      this.state === 'removed'\r\n    ) {\r\n      return;\r\n    }\r\n    this.timeout = setTimeout(\r\n      () => this.remove(),\r\n      this.options.extendedTimeOut\r\n    );\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ToastNoAnimation],\r\n  exports: [ToastNoAnimation],\r\n  entryComponents: [ToastNoAnimation]\r\n})\r\nexport class ToastNoAnimationModule {}\r\n"],"names":[],"mappings":"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"}
